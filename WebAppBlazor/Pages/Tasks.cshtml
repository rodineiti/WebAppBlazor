@page "/tasks"
@inject HttpClient Http

<div class="container">
    <div class="row">
        <div class="col-md-8 col-md-offset-2">
            <div class="card">
                <div class="card-title">Minhas tarefas</div>

                <div class="card-body">
                    <div class="input-group">
                        <input type="text" class="form-control"  bind="@tarefa.Name" />
                        <span class="input-group-btn">
                            <button class="btn btn-success" onclick="@(async () => await AddTarefa())">Adicionar</button>
                        </span>
                    </div>

                    @if (tarefas == null)
                    {
                        <p><em>Loading...</em></p>
                    }
                    else
                    {
                        <div class="tasks-list">
                            @if (tarefas.Length == 0)
                            {
                                <div class="alert alert-danger">
                                    Você não tem nenhuma tarefa
                                </div>
                            }
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Nome</th>
                                        <th>Status</th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var tarefa in tarefas)
                                    {
                                        <tr>
                                            <td>@tarefa.Id</td>
                                            <td>@tarefa.Name</td>
                                            <td>
                                                @if (@tarefa.Completed)
                                                {
                                                    <span>Finalizado</span>
                                                }
                                                else
                                                {
                                                    <span>Em Aberto</span>
                                                }
                                            </td>
                                            <td>
                                                @if (@tarefa.Completed)
                                                {
                                                    <button class="btn btn-primary" 
                                                            onclick="@(async () => await CloseTarefa(@tarefa.Id, @tarefa.Completed))">Reabrir</button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-success" 
                                                            onclick="@(async () => await CloseTarefa(@tarefa.Id, @tarefa.Completed))">Finalizar</button>
                                                }
                                            </td>
                                            <td>
                                                <button class="btn btn-danger" 
                                                        onclick="@(async () => await DeleteTarefa(@tarefa.Id))">Deletar</button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }

                </div>

            </div>
        </div>
    </div>
</div>

@functions {
    string url = "http://localhost:8000";

    Tarefa[] tarefas;

    Tarefa tarefa = new Tarefa();

    protected override async Task OnInitAsync()
    {
        tarefas = await Http.GetJsonAsync<Tarefa[]>(url + "/api/tasks");
    }

    protected async Task AddTarefa()
    {
        await Http.SendJsonAsync(HttpMethod.Post, url + "/api/tasks", tarefa);
        tarefa = new Tarefa();
        tarefas = await Http.GetJsonAsync<Tarefa[]>(url + "/api/tasks");
    }

    protected async Task CloseTarefa(int Id, bool Completed)
    {
        Tarefa tarefa = new Tarefa();
        tarefa.Completed = !Completed;

        await Http.SendJsonAsync(HttpMethod.Post, url + "/api/tasks/" + Convert.ToInt32(Id) + "/closeTarefa", tarefa);
        tarefa = new Tarefa();
        tarefas = await Http.GetJsonAsync<Tarefa[]>(url + "/api/tasks");
    }

    protected async Task DeleteTarefa(int Id)
    {
        await Http.GetStringAsync(url + "/api/tasks/" + Convert.ToInt32(Id) + "/deleteTarefa");
        tarefas = await Http.GetJsonAsync<Tarefa[]>(url + "/api/tasks");
    }

    class Tarefa
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public bool Completed { get; set; }
    }
}  