#pragma checksum "C:\Users\Rodinei\source\repos\WebAppBlazor\WebAppBlazor\Pages\Tasks.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a9bcf12132b35253ac582c68f02831edfc92ab84"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace WebAppBlazor.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using WebAppBlazor;
    using WebAppBlazor.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/tasks")]
    public class Tasks : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 87 "C:\Users\Rodinei\source\repos\WebAppBlazor\WebAppBlazor\Pages\Tasks.cshtml"
            
    string url = "http://localhost:8000";

    Tarefa[] tarefas;

    Tarefa tarefa = new Tarefa();

    protected override async Task OnInitAsync()
    {
        tarefas = await Http.GetJsonAsync<Tarefa[]>(url + "/api/tasks");
    }

    protected async Task AddTarefa()
    {
        await Http.SendJsonAsync(HttpMethod.Post, url + "/api/tasks", tarefa);
        tarefa = new Tarefa();
        tarefas = await Http.GetJsonAsync<Tarefa[]>(url + "/api/tasks");
    }

    protected async Task CloseTarefa(int Id, bool Completed)
    {
        Tarefa tarefa = new Tarefa();
        tarefa.Completed = !Completed;

        await Http.SendJsonAsync(HttpMethod.Post, url + "/api/tasks/" + Convert.ToInt32(Id) + "/closeTarefa", tarefa);
        tarefa = new Tarefa();
        tarefas = await Http.GetJsonAsync<Tarefa[]>(url + "/api/tasks");
    }

    protected async Task DeleteTarefa(int Id)
    {
        await Http.GetStringAsync(url + "/api/tasks/" + Convert.ToInt32(Id) + "/deleteTarefa");
        tarefas = await Http.GetJsonAsync<Tarefa[]>(url + "/api/tasks");
    }

    class Tarefa
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public bool Completed { get; set; }
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
